//
//  MyStyleKit.m
//  kdeconnect
//
//  Created by YANG Qiao on 8/5/14.
//  Copyright (c) 2014 (null). All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "MyStyleKit.h"


@implementation MyStyleKit

#pragma mark Cache

static UIColor* _navbar = nil;
static UIColor* _buttonNormal = nil;
static UIColor* _buttonHighlighted = nil;
static UIColor* _intro=nil;
static UIColor* _intro1=nil;
static UIColor* _intro2=nil;
static UIColor* _intro3=nil;
static UIImage* _imageOfPlay = nil;
static UIImage* _imageOfPlayHighlighted = nil;
static UIImage* _imageOfPause = nil;
static UIImage* _imageOfPauseHighlighted = nil;
static UIImage* _imageOfForward = nil;
static UIImage* _imageOfForwardHighlighted = nil;
static UIImage* _imageOfBack = nil;
static UIImage* _imageOfBackHighlighted = nil;
static UIImage* _imageOfPrevious = nil;
static UIImage* _imageOfPreviousHighlighted = nil;
static UIImage* _imageOfFollowing = nil;
static UIImage* _imageOfFollowingHighlighted = nil;
static UIImage* _imageOfMousePadIntro = nil;
static UIImage* _imageOfMousePadIntro1Small = nil;
static UIImage* _imageOfMousePadIntro2Small = nil;
static UIImage* _imageOfMousePadIntro3Small = nil;
static UIImage* _imageOfMousePadIntro4Small = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _navbar = [UIColor colorWithRed: 0.109 green: 0.452 blue: 1 alpha: 0.995];
    _buttonNormal = [UIColor colorWithRed: 0 green: 0.693 blue: 1 alpha: 1];
    _buttonHighlighted = [UIColor colorWithRed: 0 green: 0.693 blue: 1 alpha: 0.456];
    _intro = [UIColor colorWithRed:90.0f/255.0f green:175.0f/255.0f blue:113.0f/255.0f alpha:0.65];
    _intro1 = [UIColor colorWithRed: 1 green: 0.774 blue: 0.134 alpha: 0.65];
    _intro2 = [UIColor colorWithRed: 0.134 green: 0.806 blue: 1 alpha: 0.65];
    _intro3 = [UIColor colorWithRed:50.0f/255.0f green:79.0f/255.0f blue:133.0f/255.0f alpha:0.65];
}

#pragma mark Colors

+ (UIColor*)navbar { return _navbar; }
+ (UIColor*)buttonNormal { return _buttonNormal; }
+ (UIColor*)buttonHighlighted { return _buttonHighlighted; }
+ (UIColor*)intro { return _intro; }
+ (UIColor*)intro1 { return _intro1; }
+ (UIColor*)intro2 { return _intro2; }
+ (UIColor*)intro3 { return _intro3; }

//// In trial version of PaintCode, the code generation is limited to one canvas

#pragma mark Drawing Methods

//// PaintCode Trial Version
//// www.paintcodeapp.com

+ (void)drawPlay;
{
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(7, 5)];
    [bezierPath addLineToPoint: CGPointMake(44, 26.71)];
    [bezierPath addLineToPoint: CGPointMake(7, 46)];
    [bezierPath addLineToPoint: CGPointMake(7, 5)];
    [bezierPath closePath];
    bezierPath.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonNormal setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];
}

+ (void)drawPlayHighlighted;
{
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(7, 5)];
    [bezierPath addLineToPoint: CGPointMake(44, 26.71)];
    [bezierPath addLineToPoint: CGPointMake(7, 46)];
    [bezierPath addLineToPoint: CGPointMake(7, 5)];
    [bezierPath closePath];
    bezierPath.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonHighlighted setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];
}

+ (void)drawPause;
{
    
    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(12.5, 8)];
        [bezierPath addCurveToPoint: CGPointMake(12.5, 43) controlPoint1: CGPointMake(12.5, 39.11) controlPoint2: CGPointMake(12.5, 43)];
        bezierPath.lineCapStyle = kCGLineCapRound;
        
        bezierPath.lineJoinStyle = kCGLineJoinRound;
        
        [MyStyleKit.buttonNormal setStroke];
        bezierPath.lineWidth = 3;
        [bezierPath stroke];
        
        
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(35.5, 8)];
        [bezier2Path addLineToPoint: CGPointMake(35.5, 43)];
        bezier2Path.lineCapStyle = kCGLineCapRound;
        
        bezier2Path.lineJoinStyle = kCGLineJoinRound;
        
        [MyStyleKit.buttonNormal setStroke];
        bezier2Path.lineWidth = 3;
        [bezier2Path stroke];
    }
}

+ (void)drawPauseHighlighted;
{
    
    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(12.5, 8)];
        [bezierPath addCurveToPoint: CGPointMake(12.5, 43) controlPoint1: CGPointMake(12.5, 39.11) controlPoint2: CGPointMake(12.5, 43)];
        bezierPath.lineCapStyle = kCGLineCapRound;
        
        bezierPath.lineJoinStyle = kCGLineJoinRound;
        
        [MyStyleKit.buttonHighlighted setStroke];
        bezierPath.lineWidth = 3;
        [bezierPath stroke];
        
        
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(35.5, 8)];
        [bezier2Path addLineToPoint: CGPointMake(35.5, 43)];
        bezier2Path.lineCapStyle = kCGLineCapRound;
        
        bezier2Path.lineJoinStyle = kCGLineJoinRound;
        
        [MyStyleKit.buttonHighlighted setStroke];
        bezier2Path.lineWidth = 3;
        [bezier2Path stroke];
    }
}

+ (void)drawForward;
{
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(10, 5)];
    [bezierPath addCurveToPoint: CGPointMake(40, 26.46) controlPoint1: CGPointMake(40, 26.46) controlPoint2: CGPointMake(40, 26.46)];
    [bezierPath addLineToPoint: CGPointMake(10, 45)];
    bezierPath.lineCapStyle = kCGLineCapRound;
    
    bezierPath.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonNormal setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];
}

+ (void)drawForwardHighlighted;
{
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(10, 5)];
    [bezierPath addCurveToPoint: CGPointMake(40, 26.46) controlPoint1: CGPointMake(40, 26.46) controlPoint2: CGPointMake(40, 26.46)];
    [bezierPath addLineToPoint: CGPointMake(10, 45)];
    bezierPath.lineCapStyle = kCGLineCapRound;
    
    bezierPath.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonHighlighted setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];
}

+ (void)drawBack;
{
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(40, 5)];
    [bezierPath addLineToPoint: CGPointMake(10, 27)];
    [bezierPath addLineToPoint: CGPointMake(40, 45)];
    bezierPath.lineCapStyle = kCGLineCapRound;
    
    bezierPath.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonNormal setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];
}

+ (void)drawBackHighlighted;
{
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(40, 5)];
    [bezierPath addLineToPoint: CGPointMake(10, 27)];
    [bezierPath addLineToPoint: CGPointMake(40, 45)];
    bezierPath.lineCapStyle = kCGLineCapRound;
    
    bezierPath.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonHighlighted setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];
}

+ (void)drawPrevious;
{
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(45, 5)];
    [bezierPath addLineToPoint: CGPointMake(15, 26.05)];
    [bezierPath addLineToPoint: CGPointMake(45, 45)];
    bezierPath.lineCapStyle = kCGLineCapRound;
    
    bezierPath.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonNormal setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];
    
    
    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(7.5, 4.5)];
    [bezier2Path addLineToPoint: CGPointMake(7.5, 45.5)];
    bezier2Path.lineCapStyle = kCGLineCapRound;
    
    bezier2Path.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonNormal setStroke];
    bezier2Path.lineWidth = 3;
    [bezier2Path stroke];
}

+ (void)drawPreviousHighlighted;
{
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(45, 5)];
    [bezierPath addLineToPoint: CGPointMake(15, 26.05)];
    [bezierPath addLineToPoint: CGPointMake(45, 45)];
    bezierPath.lineCapStyle = kCGLineCapRound;
    
    bezierPath.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonHighlighted setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];
    
    
    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(7.5, 4.5)];
    [bezier2Path addLineToPoint: CGPointMake(7.5, 45.5)];
    bezier2Path.lineCapStyle = kCGLineCapRound;
    
    bezier2Path.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonHighlighted setStroke];
    bezier2Path.lineWidth = 3;
    [bezier2Path stroke];
    
}

+ (void)drawFollowing
{
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(45, 4.5)];
    [bezierPath addLineToPoint: CGPointMake(45, 45.5)];
    bezierPath.lineCapStyle = kCGLineCapRound;
    
    bezierPath.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonNormal setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];
    
    
    //// Bezier 1 Drawing
    UIBezierPath* bezier1Path = UIBezierPath.bezierPath;
    [bezier1Path moveToPoint: CGPointMake(7.5, 45)];
    [bezier1Path addLineToPoint: CGPointMake(37.5, 25)];
    [bezier1Path addLineToPoint: CGPointMake(7.5, 5)];
    bezier1Path.lineCapStyle = kCGLineCapRound;
    
    bezier1Path.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonNormal setStroke];
    bezier1Path.lineWidth = 3;
    [bezier1Path stroke];

}

+ (void)drawFollowingHighlighted
{
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(45, 4.5)];
    [bezierPath addLineToPoint: CGPointMake(45, 45.5)];
    bezierPath.lineCapStyle = kCGLineCapRound;
    
    bezierPath.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonHighlighted setStroke];
    bezierPath.lineWidth = 3;
    [bezierPath stroke];
    
    
    //// Bezier 1 Drawing
    UIBezierPath* bezier1Path = UIBezierPath.bezierPath;
    [bezier1Path moveToPoint: CGPointMake(7.5, 45)];
    [bezier1Path addLineToPoint: CGPointMake(37.5, 25)];
    [bezier1Path addLineToPoint: CGPointMake(7.5, 5)];
    bezier1Path.lineCapStyle = kCGLineCapRound;
    
    bezier1Path.lineJoinStyle = kCGLineJoinRound;
    
    [MyStyleKit.buttonHighlighted setStroke];
    bezier1Path.lineWidth = 3;
    [bezier1Path stroke];
    
}

+ (void)drawMousePadIntro;
{
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(17.5, 203.5)];
    [bezierPath addLineToPoint: CGPointMake(577.5, 203.5)];
    [UIColor.whiteColor setStroke];
    bezierPath.lineWidth = 3.5;
    [bezierPath stroke];
    
    
    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(311.5, 38.5)];
    [bezier2Path addLineToPoint: CGPointMake(311.5, 338.5)];
    [UIColor.whiteColor setStroke];
    bezier2Path.lineWidth = 3.5;
    [bezier2Path stroke];
    
    
    //// Text 2 Drawing
    CGRect text2Rect = CGRectMake(350, 38, 201, 141);
    NSMutableParagraphStyle* text2Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    text2Style.alignment = NSTextAlignmentCenter;
    
    NSDictionary* text2FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 20], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: text2Style};
    
    [@"Right Click\n\nUse one figer to tap once and hold for a short time" drawInRect: text2Rect withAttributes: text2FontAttributes];
    
    
    //// Text 3 Drawing
    CGRect text3Rect = CGRectMake(32, 38, 232, 134);
    NSMutableParagraphStyle* text3Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    text3Style.alignment = NSTextAlignmentCenter;
    
    NSDictionary* text3FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 20], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: text3Style};
    
    [@"Single/Double Left Click\n\nUse one finger to tap once/twice" drawInRect: text3Rect withAttributes: text3FontAttributes];
    
    
    //// Text 4 Drawing
    CGRect text4Rect = CGRectMake(48, 233, 200, 118);
    NSMutableParagraphStyle* text4Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    text4Style.alignment = NSTextAlignmentCenter;
    
    NSDictionary* text4FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 20], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: text4Style};
    
    [@"Middle Click\n\nUse two fingers to tap once" drawInRect: text4Rect withAttributes: text4FontAttributes];
    
    //// Text Drawing
    CGRect textRect = CGRectMake(350, 233, 216, 118);
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentCenter;
    
    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 20], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: textStyle};
    
    [@"Scroll\n\nUse two fingers to touch and move vertically or horizontally" drawInRect: textRect withAttributes: textFontAttributes];
    
}

+ (void)drawMousePadIntro1Small;
{
    
    //// Text 3 Drawing
    CGRect text3Rect = CGRectMake(27, 125, 250, 129);
    NSMutableParagraphStyle* text3Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    text3Style.alignment = NSTextAlignmentCenter;
    
    NSDictionary* text3FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 20], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: text3Style};
    
    [@"Single/Double Left Click\n\nUse one finger to tap once/twice" drawInRect: text3Rect withAttributes: text3FontAttributes];

}

+ (void)drawMousePadIntro2Small;
{
    
    //// Text 2 Drawing
    CGRect text2Rect = CGRectMake(27, 125, 250, 196);
    NSMutableParagraphStyle* text2Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    text2Style.alignment = NSTextAlignmentCenter;
    
    NSDictionary* text2FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 20], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: text2Style};
    
    [@"Right Click\n\nUse one figer to tap once and hold for a short time" drawInRect: text2Rect withAttributes: text2FontAttributes];
    
}

+ (void)drawMousePadIntro3Small;
{
    //// Text 4 Drawing
    CGRect text4Rect = CGRectMake(27, 125, 250, 183);
    NSMutableParagraphStyle* text4Style = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    text4Style.alignment = NSTextAlignmentCenter;
    
    NSDictionary* text4FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 20], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: text4Style};
    
    [@"Middle Click\n\nUse two fingers to tap once" drawInRect: text4Rect withAttributes: text4FontAttributes];
    
}

+ (void)drawMousePadIntro4Small;
{
    //// Text Drawing
    CGRect textRect = CGRectMake(27, 125, 250, 127);
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentCenter;
    
    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 20], NSForegroundColorAttributeName: UIColor.whiteColor, NSParagraphStyleAttributeName: textStyle};
    
    [@"Scroll\n\nUse two fingers to touch and move vertically or horizontally" drawInRect: textRect withAttributes: textFontAttributes];
}

#pragma mark Generated Images

+ (UIImage*)imageOfPlay;
{
    if (_imageOfPlay)
        return _imageOfPlay;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawPlay];
    _imageOfPlay = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfPlay;
}

+ (UIImage*)imageOfPlayHighlighted;
{
    if (_imageOfPlayHighlighted)
        return _imageOfPlayHighlighted;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawPlayHighlighted];
    _imageOfPlayHighlighted = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfPlayHighlighted;
}


+ (UIImage*)imageOfPause;
{
    if (_imageOfPause)
        return _imageOfPause;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawPause];
    _imageOfPause = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfPause;
}

+ (UIImage*)imageOfPauseHighlighted;
{
    if (_imageOfPauseHighlighted)
        return _imageOfPauseHighlighted;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawPauseHighlighted];
    _imageOfPauseHighlighted = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfPauseHighlighted;
}

+ (UIImage*)imageOfForward;
{
    if (_imageOfForward)
        return _imageOfForward;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawForward];
    _imageOfForward = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfForward;
}

+ (UIImage*)imageOfForwardHighlighted;
{
    if (_imageOfForwardHighlighted)
        return _imageOfForwardHighlighted;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawForwardHighlighted];
    _imageOfForwardHighlighted = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfForwardHighlighted;
}


+ (UIImage*)imageOfBack;
{
    if (_imageOfBack)
        return _imageOfBack;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawBack];
    _imageOfBack = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfBack;
}

+ (UIImage*)imageOfBackHighlighted;
{
    if (_imageOfBackHighlighted)
        return _imageOfBackHighlighted;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawBackHighlighted];
    _imageOfBackHighlighted = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfBackHighlighted;
}

+ (UIImage*)imageOfPrevious
{
    if (_imageOfPrevious)
        return _imageOfPrevious;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawPrevious];
    _imageOfPrevious = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfPrevious;
}

+ (UIImage*)imageOfPreviousHighlighted
{
    if (_imageOfPreviousHighlighted)
        return _imageOfPreviousHighlighted;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawPreviousHighlighted];
    _imageOfPreviousHighlighted = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfPreviousHighlighted;
}

+ (UIImage*)imageOfFollowing
{
    if (_imageOfFollowing)
        return _imageOfFollowing;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawFollowing];
    _imageOfFollowing = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfFollowing;
}

+ (UIImage*)imageOfFollowingHighlighted
{
    if (_imageOfFollowingHighlighted)
        return _imageOfFollowingHighlighted;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [MyStyleKit drawFollowingHighlighted];
    _imageOfFollowingHighlighted = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfFollowingHighlighted;
}

+ (UIImage*)imageOfMousePadIntro
{
    if (_imageOfMousePadIntro)
        return _imageOfMousePadIntro;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(600, 400), NO, 0.0f);
    [MyStyleKit drawMousePadIntro];
    _imageOfMousePadIntro = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfMousePadIntro;
}

+ (UIImage*)imageOfMousePadIntro1Small;
{
    if (_imageOfMousePadIntro1Small)
        return _imageOfMousePadIntro1Small;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 400), NO, 0.0f);
    [MyStyleKit drawMousePadIntro1Small];
    _imageOfMousePadIntro1Small = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfMousePadIntro1Small;
}

+ (UIImage*)imageOfMousePadIntro2Small;
{
    if (_imageOfMousePadIntro2Small)
        return _imageOfMousePadIntro2Small;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 400), NO, 0.0f);
    [MyStyleKit drawMousePadIntro2Small];
    _imageOfMousePadIntro2Small = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfMousePadIntro2Small;
}

+ (UIImage*)imageOfMousePadIntro3Small;
{
    if (_imageOfMousePadIntro3Small)
        return _imageOfMousePadIntro3Small;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 400), NO, 0.0f);
    [MyStyleKit drawMousePadIntro3Small];
    _imageOfMousePadIntro3Small = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfMousePadIntro3Small;
}

+ (UIImage*)imageOfMousePadIntro4Small;
{
    if (_imageOfMousePadIntro4Small)
        return _imageOfMousePadIntro4Small;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(300, 400), NO, 0.0f);
    [MyStyleKit drawMousePadIntro4Small];
    _imageOfMousePadIntro4Small = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return _imageOfMousePadIntro4Small;
}

@end
